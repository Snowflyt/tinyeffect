{
  "name": "tinyeffect",
  "version": "0.3.1",
  "private": true,
  "description": "A tiny TypeScript library for handling side effects in a unified way using algebraic effects, offering a type-safe approach for async operations, error handling, dependency injection, and more.",
  "keywords": [
    "type safe",
    "effect",
    "side effect",
    "algebraic effect",
    "asynchronous",
    "exception",
    "dependency injection"
  ],
  "homepage": "https://github.com/Snowflyt/tinyeffect",
  "bugs": {
    "url": "https://github.com/Snowflyt/tinyeffect/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Snowflyt/tinyeffect"
  },
  "license": "MIT",
  "author": "Snowflyt <gaoge011022@163.com>",
  "type": "module",
  "main": "./index.js",
  "module": "./index.js",
  "types": "./index.d.ts",
  "scripts": {
    "bench": "vitest bench --run",
    "bench:watch": "vitest bench",
    "prebuild": "npm run clean",
    "build": "tsc --emitDeclarationOnly -p tsconfig.build.json && cpy src/**/*.ts dist && rimraf -g dist/**/*.{proof,spec,bench}.ts dist/types.d.ts && node -e \"import path from 'node:path'; import fs from 'node:fs'; import tsBlankSpace from 'ts-blank-space'; fs.readdirSync('dist', { recursive: true }).map((file) => path.join('dist', file)).filter((file) => file.endsWith('.ts') && !file.endsWith('.d.ts') && fs.statSync(file).isFile()).forEach((file) => { fs.writeFileSync(file.substring(0, file.lastIndexOf('.')) + '.js', tsBlankSpace(fs.readFileSync(file, 'utf-8'))); fs.rmSync(file); })\" && cpy src/**/*.{js,d.ts} dist && tsc-alias -p tsconfig.build.json && replace-in-file \"/^\\s*\\/\\/ eslint-disable-next-line .+$/mg\" \"\" dist/**/*.js --isRegex && replace-in-file \"/^\\s*\\/\\/ @ts-.+$/mg\" \"\" dist/**/*.js --isRegex && prettier --log-level=silent --print-width 80 --write dist/**/* --ignore-path !dist/**/* && node -e \"import { replaceInFileSync } from 'replace-in-file'; replaceInFileSync({ files: 'dist/**/*.js', from: /^\\s*\\*\\/\\n\\n/mg, to: '*/\\n' })\" && prettier --log-level=silent --print-width 80 --write dist/**/* --ignore-path !dist/**/* && cpy package.json dist && json -I -f dist/package.json -e \"delete this.private; delete this.scripts; delete this.devDependencies\" && cpy README.md dist && cpy LICENSE dist && node -e \"import { replaceInFileSync } from 'replace-in-file'; import packageJSON from './dist/package.json' with { type: 'json' }; replaceInFileSync({ files: 'dist/README.md', from: './screenshot.svg', to: 'https://raw.githubusercontent.com/Snowflyt/tinyeffect/v' + packageJSON['version'] + '/screenshot.svg' })\"",
    "clean": "rimraf dist",
    "format": "prettier --no-error-on-unmatched-pattern --write **/*.{js,ts,json,md} *.{cjs,mjs,cts,mts}",
    "lint": "eslint **/*.{js,ts} *.{cjs,mjs,cts,mts} --no-error-on-unmatched-pattern --report-unused-disable-directives-severity error --max-warnings 0",
    "lint:fix": "eslint --fix **/*.{js,ts} *.{cjs,mjs,cts,mts} --no-error-on-unmatched-pattern --report-unused-disable-directives-severity error --max-warnings 0",
    "prepare": "husky",
    "test": "vitest run",
    "test:cov": "vitest run --coverage --coverage.include \"src/**/!(*.proof).{js,ts}\"",
    "test:ui": "vitest --ui --coverage.enabled=true --coverage.include \"src/**/!(*.proof).{js,ts}\"",
    "test:watch": "vitest",
    "test:watch-cov": "vitest --coverage --coverage.include \"src/**/!(*.proof).{js,ts}\"",
    "test-types": "typroof"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.7.1",
    "@types/eslint": "^8.56.12",
    "@types/lint-staged": "^13.3.0",
    "@typescript-eslint/eslint-plugin": "^8.23.0",
    "@typescript-eslint/parser": "^8.23.0",
    "@vitest/coverage-v8": "^3.0.5",
    "@vitest/ui": "^3.0.5",
    "cpy-cli": "^5.0.0",
    "effect": "^3.12.10",
    "eslint": "^8.57.1",
    "eslint-config-prettier": "^10.0.1",
    "eslint-import-resolver-typescript": "^3.7.0",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-prettier": "^5.2.3",
    "eslint-plugin-sonarjs": "^0.25.1",
    "eslint-plugin-sort-destructure-keys": "^2.0.0",
    "husky": "^9.1.7",
    "json": "^11.0.0",
    "lint-staged": "^15.4.3",
    "prettier": "^3.4.2",
    "prettier-plugin-packagejson": "^2.5.8",
    "replace-in-file": "^8.3.0",
    "rimraf": "^6.0.1",
    "ts-blank-space": "^0.5.1",
    "tsc-alias": "^1.8.10",
    "typescript": "^5.7.3",
    "typroof": "^0.4.1",
    "vitest": "^3.0.5"
  }
}
